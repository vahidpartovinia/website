<html>
  

    <head>
       <title> Teaching </title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>
        <script type="text/javascript" src="http://netdna.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script>
        <link href="http://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.min.css"
        rel="stylesheet" type="text/css">
        <link rel="stylesheet" href="theme.css">
    </head>







<nav class="navbar navbar-default navbar-fixed-top">
  <div class="container">


    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="index.htm">Home</a>
    </div>

    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav">



        <li><a href="bio.htm">About</a></li>
        <li><a href="publication.htm">Publications</a></li>
        <li class="active"><a href="teaching.htm">Teachings<span class="sr-only">(current)</span></a></li> 
        <li><a href="software.htm">Software</a></li>
        <li><a href="server.htm">Servers</a></li>
        <li><a href="student.htm">Students</a></li>
        <li><a href="link.htm">Links</a></li>
        <li><a href="contact.htm">Contact</a></li>
      </ul>
     
    </div><!-- /.navbar-collapse -->


  </div>
</nav>




<div class="container">
<br>
<br>


<h3> Undergraduate Courses</h3>
<body> 
Department of Mathematical and Industrial Engineering offers four versions of Probability and Statistics 
course for engineers. 
<br>
MTH 2302A: for Physical and Electrical Engineers.
<br>
MTH 2302B: for Chemical, Mechanical, and Material Engineers.
<br>
MTH 2302C: for Geology, Civil, and Mine Engineers.
<br>
MTH 2302D: for Industrial, Computer, and Software Engineers.
<br>
 I regularly teach <a href="http://www.polymtl.ca/etudes/cours/details.php?sigle=MTH2302D">MTH 2302D</a>. 

<h3> Graduate Course </h3>
I mounted a  Data Mining course <a href="http://www.polymtl.ca/etudes/cours/details.php?sigle=MTH6312">MTH 6312</a> after my arraival to Ecole Polytechnique.

<p>
MTH 6312 is a graduate course targeting Statistical Learning and Data Mining from methodological point of view. The official page of the course 
on the Polytechniques graduate course web list is 
<a href="http://www.polymtl.ca/etudes/cours/details.php?sigle=MTH6312">here</a>. 
If you had problems with taking the course, contact our graduate office at Ecole Polytechnique or send an email to vahid d0t partovinia at-sign polymtl d0t ca. 
 The course will be given every fall.
Lectures will appear at
one of the Ecole Polytechnique de Montreal's buldings. The teaching language is flexible (English or French) depending on participants. 
</p>

<br>

The main reference books of the course are  

                    <div class="col-sm-30">
                        <div class="row">




                            <div class=" col-md-3">
                              <h3>An Introduction to Statistical Learning</h3>
                    <img src="http://ecx.images-amazon.com/images/I/41oQwj8rS0L._SX329_BO1,204,203,200_.jpg" 
                      class="center-block img-responsive img-rounded">

                            The book website is 
                            <a href="http://www-bcf.usc.edu/~gareth/ISL/">here</a>. Download the book all in one
                            PDF from <a href="http://www-bcf.usc.edu/~gareth/ISL/ISLR%20Fourth%20Printing.pdf">here</a>.  

                            </div>







                            <div class=" col-md-3">
                              <h3>The Elements of Statistical Learning</h3>
                    <img src="http://ecx.images-amazon.com/images/I/41LeU3HcBdL._SX320_BO1,204,203,200_.jpg" 
                      class="center-block img-responsive img-rounded">

                              The book website is 
                              <a href="http://www-stat.stanford.edu/%7Etibs/ElemStatLearn/">here</a>. Download the book all in one
                              PDF from <a href="http://www-stat.stanford.edu/%7Ehastie/Papers/ESLII.pdf">here</a>.
                            </div>





                            <div class=" col-md-3">
                              <h3>Machine Learning: A Probabilistic Perspective </h3>
                    <img src="http://ecx.images-amazon.com/images/I/41SbWSolCgL.jpg" 
                      class="center-block img-responsive img-rounded">
                          The book website is 
                          <a href="https://github.com/probml/pmtk3">here</a>. If you need more support check <a href="https://code.google.com/p/pmtksupport/">here</a>.                           
                        </div>







                            </div>





<br><br><br>
<p>
We discuss the new supervised, semi-supervised and unsupervised methods. 
Main subjects include:<br>

Loss Function and Optimization <br>
Bias-variance trade-off, model selection criteria<br>
Bayesian linear models<br>
Lasso regression, Least angle regression<br>
Nonparametric regression and smoothing splines<br>
Discrimination techniques 
(logistic regression, linear and quadratic discriminants, nonparametric logistic regression, mixture of discriminants)<br>
Separating hyperplanes and support vector machines<br>
Additive trees, MARS, and CART<br>
EM algorithm and applications in semi-supervised learning<br>
Bagging and boosting<br>
High-dimensional situations<br>
Bayesian parametric clustering<br>
Bayesian functional clustering<br>
Bayesian nonparametric models and Dirichlet processes<br>
Variational inference.<br>
</p>

<br><br><br>







                    To get an idea what this course is about, draw in the square and a k-nearest-neighbour classification algorithm recognizes the digit you drew.<br> 

                     Check a nice convolutional neural networks which
                     is much more precise compred to nearest-neighbours 
                     <a href="http://scs.ryerson.ca/~aharley/vis/">HERE</a>. <br> 

                     Check another visualization on deep neural networks by Google 
                     <a href="http://playground.tensorflow.org/">HERE</a>. <br> 
                      
                    <script src="encog-js-1.0.js"></script>
                    <script src="encog-widget-js-1.0.js"></script>

                    <style type="text/css"><!--
                    #example-holder
                    {
    border: 1px solid #000;
    padding:5px;
    background: #c0c0c0;
    width: 420px;
    height: 340px;
    position: relative;
}

#drawing-area
{
    border: 1px solid #000;
    background: white;
    width:300px;
    height:300px;
    position: absolute;
    display: inline;
    top:5px;
    left: 5px;
}

#downsampleView
{
    border: 1px solid #000;
    background: white;
    width: 110px;
    height: 120px;
    position: absolute;
    display: inline;
    top:5px;
    left:313px;
}

#lstLetters
{
    border: 1px solid #000;
    width:112px;
    height: 171px;
    position: absolute;
    display: inline;
    left: 313px;
    top: 137px;
}

#example-btn1
{
    border: 1px solid #000;
    position: absolute;
    display: inline;
    width: 416px;
    top:315px;
}

--></style><div id="example-holder">
    <div id="drawing-area"></div><select id="lstLetters" size="10"></select><div id="example-btn1"><input id="btnRecognize" type="button" value="Recognize" /><input id="btnTeach" type="button" value="Teach" /><input id="btnClear" type="button" value="Clear" /><input id="btnDownsample" type="button" value="Down Sample" /><input id="btnRemove" type="button" value="Remove" /></div>
    <p> <div id="downsampleView"></div></p>
</div>
<script type="text/javascript">
<!--//--><![CDATA[// ><!--

"use strict";
if(window.addEventListener) {
    window.addEventListener('load', function () {

        var DOWNSAMPLE_WIDTH = 5;
        var DOWNSAMPLE_HEIGHT = 8;

        var lstLetters, downsampleArea;
        var charData = {};
        var drawingArea;
        var downSampleData = [];

        function init () {

            // Find the canvas element.
            drawingArea = ENCOG.GUI.Drawing.create('drawing-area',300,300);
            downsampleArea = ENCOG.GUI.CellGrid.create('downsampleView',DOWNSAMPLE_WIDTH,DOWNSAMPLE_HEIGHT,110,120);

            downsampleArea.outline = true;
            downsampleArea.mouseDown = function(x,y) {};

            downsampleArea.determineColor = function(row,col) {
                var index = (row*this.gridWidth)+col;
                if( downSampleData[index] < 0 )   {
                    return "white";
                }
                else {
                    return "black";
                }
            };

            lstLetters = document.getElementById('lstLetters');

            lstLetters.addEventListener('change', ev_selectList, true);

            var btnClear = document.getElementById('btnClear');
            var btnDownsample = document.getElementById('btnDownsample');
            var btnRecognize = document.getElementById('btnRecognize');
            var btnTeach = document.getElementById('btnTeach');
            var btnRemove = document.getElementById('btnRemove');

            btnClear.addEventListener('click', ev_clear, false);
            btnDownsample.addEventListener('click', ev_downSample, false);
            btnRecognize.addEventListener('click', ev_recognize, false);
            btnTeach.addEventListener('click', ev_teach, false);
            btnRemove.addEventListener('click', ev_remove, false);

            downSampleData = drawingArea.performDownSample();
            displaySample(downSampleData);
            preload();
        }

        /////////////////////////////////////////////////////////////////////////////
        // Event functions
        /////////////////////////////////////////////////////////////////////////////

        // Called when the "Teach" button is clicked.
        function ev_teach(ev)
        {
            var data = drawingArea.performDownSample();
            displaySample(data);

            if( data == null )
            {
                alert("You must draw something first.");
            }
            else
            {
                var charEntered = prompt("What did you just draw?", "");

                if( charEntered )
                {
                    if( charEntered in charData )
                    {
                        alert("That character is already defined.");
                    }
                    else if( charEntered.length!=1 )
                    {
                        alert("Please enter exactly one character.");
                    }
                    else
                    {
                        drawingArea.clear();
                        charData[charEntered] = data;
                        lstLetters.add(new Option(charEntered));
                        clearDownSample();
                    }
                }
            }
        }

        // Called when the "Remove" button is clicked.
        function ev_remove(ev)
        {
            for (var i = lstLetters.length - 1; i>=0; i--) {
                if (lstLetters.options[i].selected) {
                    lstLetters.remove(i);
                }
            }
            clearDownSample();
        }

        // Called when the "Downsample" button is clicked
        function ev_downSample(ev)
        {
            downSampleData = drawingArea.performDownSample();
            displaySample();
        }

        // Called when the "Clear" button is clicked
        function ev_clear(ev)
        {
            drawingArea.clear();
            clearDownSample();
        }

        // Called when the selected letter changes
        function ev_selectList (ev)
        {
            var c = lstLetters.options[lstLetters.selectedIndex].text;
            downSampleData = charData[c];
            displaySample();
        }

        // Called when the "Recognize" button is clicked
        function ev_recognize (ev)
        {
            downSampleData = drawingArea.performDownSample();
            displaySample();
            if( lstLetters.length<1 )
            {
                alert("Please teach me something first.");
            }
            else if( downSampleData == null )
            {
                alert("You must draw something to recognize.");
            }
            else
            {
                var bestChar = '??';
                var bestScore = 0;

                for(var c in charData )
                {
                    var data = charData[c];

// Now we will actually recognize the letter drawn.
// To do this, we will use a Euclidean distance
// http://www.heatonresearch.com/wiki/Euclidean_Distance

                    var sum = 0;
                    for(var i = 0; i<data.length; i++ )
                    {
                        var delta = data[i] - downSampleData[i];
                        sum = sum + (delta*delta);
                    }

                    sum = Math.sqrt(sum);

// Basically we are calculating the Euclidean distance between
// what was just drawn, and each of the samples we taught
// the program.  The smallest Euclidean distance is the char.

                    if( sum<bestScore || bestChar=='??' )
                    {
                        bestScore = sum;
                        bestChar = c;
                    }

                }

                alert('I believe you typed: ' + bestChar );
            }

            drawingArea.clear();
            clearDownSample();
        }

        function clearDownSample() {
            downSampleData = ENCOG.ArrayUtil.allocate1D(DOWNSAMPLE_WIDTH*DOWNSAMPLE_HEIGHT);
            ENCOG.ArrayUtil.fillArray(downSampleData,0,downSampleData.length,-1);
            displaySample();
        }

        // Preload the digits, so that the user can quickly do some OCR if desired.
        function preload()
        {
            defineChar("0", new Array( -1,1,1,1,-1,1,1,-1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1 ) );
            defineChar("1", new Array( 1,1,1,-1,-1,1,1,1,-1,-1,1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,1,1,1,1) );
            defineChar("2", new Array(1,1,1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,1,1,1,1,-1,1,-1,1,1,-1,1,1,1,1,1) );
            defineChar("3", new Array(1,1,1,1,-1,-1,-1,-1,1,1,-1,-1,-1,1,1,-1,-1,1,1,-1,-1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,-1,-1,1,1,1,1,1,1) );
            defineChar("4", new Array(1,-1,-1,1,-1,1,-1,-1,1,-1,1,-1,-1,1,-1,1,1,1,1,1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,-1,-1,1,-1) );
            defineChar("5", new Array(1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,-1,-1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,-1,-1,1,1,1,1,1,1) );
            defineChar("6", new Array(-1,1,1,1,-1,1,1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,1,1,1,1,1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,1) );
            defineChar("7", new Array(1,1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,-1,1,1,-1,-1,-1,1,-1,-1,-1,1,1,-1,-1,-1,1,-1,-1,-1) );
            defineChar("8", new Array(1,1,1,1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,1,1,1,1,-1,1,1,1,1,1,1,-1,-1,1,1,-1,-1,-1,1,1,1,1,1,1) );
            defineChar("9", new Array(1,1,1,1,1,1,1,-1,-1,1,1,-1,-1,-1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,-1,-1,1) );
        }

        // Define a character, add it to the list and to the map.
        function defineChar(charEntered,data)
        {
            charData[charEntered] = data;
            lstLetters.add(new Option(charEntered));
        }

        // Display downsampled data to the grid.
        function displaySample()
        {
            downsampleArea.render();
        }

        // cause the init function to be called.
        init();

    }, false); }

//--><!]]>
</script>






                    <br>
                    <br>





                <div class="col-sm-30">
                        <div class="row">

                            <div class=" col-md-4">



                        <h3>Chicago Crime Density</h3>
                          If you want to buy a house in Chicago, better to look at the crime density.
                             Crime data are available publicly by the <a href="https://data.cityofchicago.org/Public-Safety/Crimes-2001-to-present/ijzp-q8t2">City of Chicago</a> 
                              <a href="chicago/index.html"><img src="chicago/snapshot.png" class="center-block img-responsive img-rounded"></a>
                              <br>

                            </div>




                            <div class=" col-md-4">


                        <h3>Mitterand versus Chirac</h3>

                        <p> Do you look for more fun with machine learning? My research team figures out which one is more likely to talk like you
                        <a href="http://chirac-mitterrand.herokuapp.com">Mitterand or Chirac?</a> <br>



        <div class="container" style="width: 100%;">
            <div class="theme-table-image col-sm-6">
            <img src="photo/mitterand.jpg">
                </div>
            <div class="theme-table-image col-sm-6">
                <img src="photo/chirac.jpg">
                </div>
             </div>


                    </div>


              <br>
              <br>




</div>




</html>
